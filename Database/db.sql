DROP TABLE IF EXISTS ORDINE;
DROP TABLE IF EXISTS SCONTRINO;
DROP TABLE IF EXISTS VENDITA;
DROP TABLE IF EXISTS PUNTOVENDITA;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS PRODOTTO;
DROP TABLE IF EXISTS CATEGORIA;
DROP TABLE IF EXISTS PROVINCIA;

--TABELLE:

--usare IDENTITY per gli ID?

CREATE TABLE PROVINCIA ( 
    IDPROVINCIA INT PRIMARY KEY, --motivo: se db esteso all'estero NOME non puÃ² fare da chiave primaria (es: Parma USA e Parma IT)
        CHECK (IDPROVINCIA > 0),

    NOME NVARCHAR(50) NOT NULL, --devono esserci almeno Milano, Lodi, Padova, Venezia, Genova, Bologna, Roma e Napoli (provincie dei punti vendita)
    REGIONE NVARCHAR(50) NOT NULL
);
--tutte le provincie di italia

CREATE TABLE CATEGORIA (
    IDCATEGORIA INT PRIMARY KEY,
        CHECK (IDCATEGORIA > 0),

    NOME NVARCHAR(50) NOT NULL,
    CATEGORIAMERCEOLOGICA NVARCHAR(50) NOT NULL
);

CREATE TABLE PRODOTTO (
    IDPRODOTTO INT PRIMARY KEY,
        CHECK (IDPRODOTTO > 0),

    NOME NVARCHAR(50) NOT NULL,
    
    PREZZOBASE DECIMAL(10,2) NOT NULL,
        CHECK (PREZZOBASE > 0),

    IDCATEGORIA INT NOT NULL, 

    FOREIGN KEY (IDCATEGORIA) REFERENCES CATEGORIA(IDCATEGORIA)
);

CREATE TABLE CLIENTE (
    IDCLIENTE INT PRIMARY KEY,
        CHECK (IDCLIENTE > 0),

    IDPROVINCIA INT NOT NULL,

    TESSERAFEDELTA BIT NOT NULL, 

    FOREIGN KEY (IDPROVINCIA) REFERENCES PROVINCIA(IDPROVINCIA)
);

CREATE TABLE PUNTOVENDITA ( --deve esserci almeno 1 punto di vendita per provincia
    IDPUNTOVENDITA INT PRIMARY KEY,
        CHECK (IDPUNTOVENDITA > 0),

    IDPROVINCIA INT NOT NULL, 
        --TODO: deve essere realtivo a una provincia tra Milano, Lodi, Padova, Venezia, Genova, Bologna, Roma e Napoli (provincie dei punti vendita)

    INDIRIZZO NVARCHAR(50) NOT NULL, --controllo formattazione con un CHECK?

    FOREIGN KEY (IDPROVINCIA) REFERENCES PROVINCIA(IDPROVINCIA)
);


CREATE TABLE SCONTRINO ( --minimo 150 tuple
    IDSCONTRINO INT PRIMARY KEY,
        CHECK (IDSCONTRINO > 0),

    IDPUNTOVENDITA INT NOT NULL,

    TESSERAFEDELTA BIT NOT NULL,

    FOREIGN KEY (IDPUNTOVENDITA) REFERENCES PUNTOVENDITA(IDPUNTOVENDITA)
);

CREATE TABLE ORDINE ( --minimo 150 tuple
    IDORDINE INT PRIMARY KEY,
        CHECK (IDORDINE > 0),

    IDCLIENTE INT NOT NULL,

    FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE VENDITAPRODOTTO ( --ciascuna tupla relativa alla vendita di un SINGOLO prodotto, conteremo il numero di prodotti venduti in una vendita con COUNT
    IDVENDITAPRODOTTO INT PRIMARY KEY,
        CHECK (IDVENDITAPRODOTTO > 0),
    
    TIPO NVARCHAR(50) NOT NULL, 
        CHECK (TIPO IN ('retail', 'online')),

    IDSCONTRINO INT, 

    IDORDINE INT,

    CHECK (
        (TIPO = 'retail' AND IDSCONTRINO IS NOT NULL AND IDORDINE IS NULL)
        OR
        (TIPO = 'online' AND IDORDINE IS NOT NULL AND IDSCONTRINO IS NULL)
    ),

    DATADIVENDITA DATE NOT NULL,
        CHECK (DATADIVENDITA BETWEEN '20250101' AND '20250930'),

    IDPRODOTTO INT NOT NULL,
   
    PREZZOSCONTATO DECIMAL(10,2) NOT NULL, --CALCOLATO E NON IMPOSTABILE (SERVE TRIGGER) (TODO)
    
    SCONTO INT NOT NULL, --CALCOLATO E NON IMPOSTABILE (SERVE TRIGGER) (TODO)
        CHECK (SCONTO IN (0, 10, 20, 30)),

    CODICESCONTO BIT NOT NULL,

    FOREIGN KEY (IDSCONTRINO) REFERENCES SCONTRINO(IDSCONTRINO),
    FOREIGN KEY (IDORDINE) REFERENCES ORDINE(IDORDINE),
    FOREIGN KEY (IDPRODOTTO) REFERENCES PRODOTTO(IDPRODOTTO)
);



--INSERTS:




--SELECTS:

SELECT * FROM PROVINCIA;
SELECT * FROM CATEGORIA;
SELECT * FROM PRODOTTO;
SELECT * FROM CLIENTE;
SELECT * FROM PUNTOVENDITA;
SELECT * FROM VENDITAPRODOTTO;
SELECT * FROM SCONTRINO;
SELECT * FROM ORDINE;
