DROP TABLE IF EXISTS PRODOTTOVENDUTO;
DROP TABLE IF EXISTS ORDINE;
DROP TABLE IF EXISTS SCONTRINO;
DROP TABLE IF EXISTS PUNTOVENDITA;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS PRODOTTO;
DROP TABLE IF EXISTS CATEGORIA;
DROP TABLE IF EXISTS PROVINCIA;

--TABELLE:
CREATE TABLE PROVINCIA ( 
    IDPROVINCIA INT IDENTITY(1,1) PRIMARY KEY, --motivo: se db esteso all'estero NOME non puÃ² fare da chiave primaria (es: Parma USA e Parma IT)

    NOMEPROVINCIA VARCHAR(50) NOT NULL, --devono esserci almeno Milano, Lodi, Padova, Venezia, Genova, Bologna, Roma e Napoli (provincie dei punti vendita)
    REGIONE VARCHAR(50) NOT NULL
);
--tutte le provincie di italia

CREATE TABLE CATEGORIA ( 
    IDCATEGORIA INT IDENTITY(100,1) PRIMARY KEY, --max 100 categorie

    NOMECATEGORIA VARCHAR(50) NOT NULL,
    CATEGORIAMERCEOLOGICA VARCHAR(50) NOT NULL
);

CREATE TABLE PRODOTTO (
    IDPRODOTTO INT IDENTITY(200,1) PRIMARY KEY, --max 100 prodotti

    NOMEPRODOTTO VARCHAR(50) NOT NULL,
    
    PREZZOBASE DECIMAL(10,2) NOT NULL,
        CHECK (PREZZOBASE > 0),

    IDCATEGORIA INT NOT NULL, 

    FOREIGN KEY (IDCATEGORIA) REFERENCES CATEGORIA(IDCATEGORIA)
);

CREATE TABLE CLIENTE (
    IDCLIENTE INT IDENTITY(300,1) PRIMARY KEY, ----max 100 clienti

    IDPROVINCIA INT NOT NULL,

    TESSERAFEDELTA BIT NOT NULL, 

    FOREIGN KEY (IDPROVINCIA) REFERENCES PROVINCIA(IDPROVINCIA)
);

CREATE TABLE PUNTOVENDITA ( --deve esserci almeno 1 punto di vendita per le provincie di Milano, Lodi, Padova, Venezia, Genova, Bologna, Roma e Napoli 
    IDPUNTOVENDITA INT IDENTITY(400,1) PRIMARY KEY, --max 100 punti vendita

    IDPROVINCIA INT NOT NULL, 
        --TODO: deve essere realtivo a una provincia tra Milano, Lodi, Padova, Venezia, Genova, Bologna, Roma e Napoli (provincie dei punti vendita)

    INDIRIZZO VARCHAR(50) NOT NULL, 
        CHECK ((INDIRIZZO LIKE 'via %, %') OR (INDIRIZZO LIKE 'strada %, %')),

    FOREIGN KEY (IDPROVINCIA) REFERENCES PROVINCIA(IDPROVINCIA)
);


CREATE TABLE SCONTRINO ( --minimo 75 tuple (massimo 100)
    IDSCONTRINO INT IDENTITY(500,1) PRIMARY KEY,

    IDPUNTOVENDITA INT NOT NULL,

    TESSERAFEDELTA BIT NOT NULL,

    FOREIGN KEY (IDPUNTOVENDITA) REFERENCES PUNTOVENDITA(IDPUNTOVENDITA)
);

CREATE TABLE ORDINE ( --minimo 75 tuple (massimo 100)
    IDORDINE INT IDENTITY(600,1) PRIMARY KEY,

    IDCLIENTE INT NOT NULL,

    FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE)
);

--numero di tuple di scontrino + numero di tuple di ordine <= 150

CREATE TABLE PRODOTTOVENDUTO ( --ciascuna tupla relativa alla vendita di un SINGOLO prodotto, conteremo il numero di prodotti venduti in una vendita con COUNT
    IDPRODOTTOVENDUTO INT IDENTITY(700,1) PRIMARY KEY,
    
    TIPO VARCHAR(50) NOT NULL, 
        CHECK (TIPO IN ('retail', 'online')),

    IDSCONTRINO INT, 

    IDORDINE INT,

    CHECK (
        (TIPO = 'retail' AND IDSCONTRINO IS NOT NULL AND IDORDINE IS NULL)
        OR
        (TIPO = 'online' AND IDORDINE IS NOT NULL AND IDSCONTRINO IS NULL)
    ),

    DATADIVENDITA DATE NOT NULL,
        CHECK (DATADIVENDITA BETWEEN '20250101' AND '20250930'),

    IDPRODOTTO INT NOT NULL,
   
    PREZZOSCONTATO DECIMAL(10,2) NOT NULL, --CALCOLATO E NON IMPOSTABILE (SERVE TRIGGER) (TODO)
    
    SCONTO INT NOT NULL, --CALCOLATO E NON IMPOSTABILE (SERVE TRIGGER) (TODO)
        CHECK (SCONTO IN (0, 10, 20, 30)),

    CODICESCONTO BIT NOT NULL,

    FOREIGN KEY (IDSCONTRINO) REFERENCES SCONTRINO(IDSCONTRINO),
    FOREIGN KEY (IDORDINE) REFERENCES ORDINE(IDORDINE),
    FOREIGN KEY (IDPRODOTTO) REFERENCES PRODOTTO(IDPRODOTTO)
);



--INSERTS:
-- mettere gli insert



--SELECTS:

SELECT * FROM PROVINCIA;
SELECT * FROM CATEGORIA;
SELECT * FROM PRODOTTO;
SELECT * FROM CLIENTE;
SELECT * FROM PUNTOVENDITA;
SELECT * FROM SCONTRINO;
SELECT * FROM ORDINE;
SELECT * FROM PRODOTTOVENDUTO;
